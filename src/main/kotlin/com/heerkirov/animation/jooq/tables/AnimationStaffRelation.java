/*
 * This file is generated by jOOQ.
 */
package com.heerkirov.animation.jooq.tables;


import com.heerkirov.animation.jooq.Indexes;
import com.heerkirov.animation.jooq.Keys;
import com.heerkirov.animation.jooq.Public;
import com.heerkirov.animation.jooq.tables.records.AnimationStaffRelationRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row4;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnimationStaffRelation extends TableImpl<AnimationStaffRelationRecord> {

    private static final long serialVersionUID = -695695137;

    /**
     * The reference instance of <code>public.animation_staff_relation</code>
     */
    public static final AnimationStaffRelation ANIMATION_STAFF_RELATION = new AnimationStaffRelation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnimationStaffRelationRecord> getRecordType() {
        return AnimationStaffRelationRecord.class;
    }

    /**
     * The column <code>public.animation_staff_relation.id</code>.
     */
    public final TableField<AnimationStaffRelationRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('animation_staff_relation_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.animation_staff_relation.animation_id</code>.
     */
    public final TableField<AnimationStaffRelationRecord, Integer> ANIMATION_ID = createField(DSL.name("animation_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.animation_staff_relation.staff_id</code>.
     */
    public final TableField<AnimationStaffRelationRecord, Integer> STAFF_ID = createField(DSL.name("staff_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.animation_staff_relation.staff_type</code>.
     */
    public final TableField<AnimationStaffRelationRecord, Short> STAFF_TYPE = createField(DSL.name("staff_type"), org.jooq.impl.SQLDataType.SMALLINT.nullable(false), this, "");

    /**
     * Create a <code>public.animation_staff_relation</code> table reference
     */
    public AnimationStaffRelation() {
        this(DSL.name("animation_staff_relation"), null);
    }

    /**
     * Create an aliased <code>public.animation_staff_relation</code> table reference
     */
    public AnimationStaffRelation(String alias) {
        this(DSL.name(alias), ANIMATION_STAFF_RELATION);
    }

    /**
     * Create an aliased <code>public.animation_staff_relation</code> table reference
     */
    public AnimationStaffRelation(Name alias) {
        this(alias, ANIMATION_STAFF_RELATION);
    }

    private AnimationStaffRelation(Name alias, Table<AnimationStaffRelationRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnimationStaffRelation(Name alias, Table<AnimationStaffRelationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AnimationStaffRelation(Table<O> child, ForeignKey<O, AnimationStaffRelationRecord> key) {
        super(child, key, ANIMATION_STAFF_RELATION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ANIMATION_STAFF_RELATION__INDEX);
    }

    @Override
    public Identity<AnimationStaffRelationRecord, Long> getIdentity() {
        return Keys.IDENTITY_ANIMATION_STAFF_RELATION;
    }

    @Override
    public UniqueKey<AnimationStaffRelationRecord> getPrimaryKey() {
        return Keys.ANIMATION_STAFF_RELATION_PKEY;
    }

    @Override
    public List<UniqueKey<AnimationStaffRelationRecord>> getKeys() {
        return Arrays.<UniqueKey<AnimationStaffRelationRecord>>asList(Keys.ANIMATION_STAFF_RELATION_PKEY);
    }

    @Override
    public AnimationStaffRelation as(String alias) {
        return new AnimationStaffRelation(DSL.name(alias), this);
    }

    @Override
    public AnimationStaffRelation as(Name alias) {
        return new AnimationStaffRelation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AnimationStaffRelation rename(String name) {
        return new AnimationStaffRelation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AnimationStaffRelation rename(Name name) {
        return new AnimationStaffRelation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row4 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row4<Long, Integer, Integer, Short> fieldsRow() {
        return (Row4) super.fieldsRow();
    }
}
