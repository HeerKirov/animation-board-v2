/*
 * This file is generated by jOOQ.
 */
package com.heerkirov.animation.jooq.tables;


import com.heerkirov.animation.jooq.Indexes;
import com.heerkirov.animation.jooq.Keys;
import com.heerkirov.animation.jooq.Public;
import com.heerkirov.animation.jooq.tables.records.AnimationTagRelationRecord;

import java.util.Arrays;
import java.util.List;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Row3;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AnimationTagRelation extends TableImpl<AnimationTagRelationRecord> {

    private static final long serialVersionUID = 1461653937;

    /**
     * The reference instance of <code>public.animation_tag_relation</code>
     */
    public static final AnimationTagRelation ANIMATION_TAG_RELATION = new AnimationTagRelation();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AnimationTagRelationRecord> getRecordType() {
        return AnimationTagRelationRecord.class;
    }

    /**
     * The column <code>public.animation_tag_relation.id</code>.
     */
    public final TableField<AnimationTagRelationRecord, Long> ID = createField(DSL.name("id"), org.jooq.impl.SQLDataType.BIGINT.nullable(false).defaultValue(org.jooq.impl.DSL.field("nextval('animation_tag_relation_id_seq'::regclass)", org.jooq.impl.SQLDataType.BIGINT)), this, "");

    /**
     * The column <code>public.animation_tag_relation.animation_id</code>.
     */
    public final TableField<AnimationTagRelationRecord, Integer> ANIMATION_ID = createField(DSL.name("animation_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * The column <code>public.animation_tag_relation.tag_id</code>.
     */
    public final TableField<AnimationTagRelationRecord, Integer> TAG_ID = createField(DSL.name("tag_id"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), this, "");

    /**
     * Create a <code>public.animation_tag_relation</code> table reference
     */
    public AnimationTagRelation() {
        this(DSL.name("animation_tag_relation"), null);
    }

    /**
     * Create an aliased <code>public.animation_tag_relation</code> table reference
     */
    public AnimationTagRelation(String alias) {
        this(DSL.name(alias), ANIMATION_TAG_RELATION);
    }

    /**
     * Create an aliased <code>public.animation_tag_relation</code> table reference
     */
    public AnimationTagRelation(Name alias) {
        this(alias, ANIMATION_TAG_RELATION);
    }

    private AnimationTagRelation(Name alias, Table<AnimationTagRelationRecord> aliased) {
        this(alias, aliased, null);
    }

    private AnimationTagRelation(Name alias, Table<AnimationTagRelationRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> AnimationTagRelation(Table<O> child, ForeignKey<O, AnimationTagRelationRecord> key) {
        super(child, key, ANIMATION_TAG_RELATION);
    }

    @Override
    public Schema getSchema() {
        return Public.PUBLIC;
    }

    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.ANIMATION_TAG_RELATION__INDEX);
    }

    @Override
    public Identity<AnimationTagRelationRecord, Long> getIdentity() {
        return Keys.IDENTITY_ANIMATION_TAG_RELATION;
    }

    @Override
    public UniqueKey<AnimationTagRelationRecord> getPrimaryKey() {
        return Keys.ANIMATION_TAG_RELATION_PKEY;
    }

    @Override
    public List<UniqueKey<AnimationTagRelationRecord>> getKeys() {
        return Arrays.<UniqueKey<AnimationTagRelationRecord>>asList(Keys.ANIMATION_TAG_RELATION_PKEY);
    }

    @Override
    public AnimationTagRelation as(String alias) {
        return new AnimationTagRelation(DSL.name(alias), this);
    }

    @Override
    public AnimationTagRelation as(Name alias) {
        return new AnimationTagRelation(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AnimationTagRelation rename(String name) {
        return new AnimationTagRelation(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AnimationTagRelation rename(Name name) {
        return new AnimationTagRelation(name, null);
    }

    // -------------------------------------------------------------------------
    // Row3 type methods
    // -------------------------------------------------------------------------

    @Override
    public Row3<Long, Integer, Integer> fieldsRow() {
        return (Row3) super.fieldsRow();
    }
}
