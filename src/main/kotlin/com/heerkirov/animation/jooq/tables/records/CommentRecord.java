/*
 * This file is generated by jOOQ.
 */
package com.heerkirov.animation.jooq.tables.records;


import com.heerkirov.animation.jooq.tables.Comment;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class CommentRecord extends UpdatableRecordImpl<CommentRecord> implements Record7<Integer, Integer, Integer, Integer, String, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = -768001857;

    /**
     * Setter for <code>public.comment.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.comment.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.comment.owner_id</code>.
     */
    public void setOwnerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.comment.owner_id</code>.
     */
    public Integer getOwnerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.comment.animation_id</code>.
     */
    public void setAnimationId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.comment.animation_id</code>.
     */
    public Integer getAnimationId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.comment.score</code>.
     */
    public void setScore(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.comment.score</code>.
     */
    public Integer getScore() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.comment.article</code>.
     */
    public void setArticle(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.comment.article</code>.
     */
    public String getArticle() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.comment.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.comment.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.comment.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.comment.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Integer, Integer, Integer, Integer, String, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Integer, Integer, Integer, Integer, String, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Comment.COMMENT.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Comment.COMMENT.OWNER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Comment.COMMENT.ANIMATION_ID;
    }

    @Override
    public Field<Integer> field4() {
        return Comment.COMMENT.SCORE;
    }

    @Override
    public Field<String> field5() {
        return Comment.COMMENT.ARTICLE;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Comment.COMMENT.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Comment.COMMENT.UPDATE_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getOwnerId();
    }

    @Override
    public Integer component3() {
        return getAnimationId();
    }

    @Override
    public Integer component4() {
        return getScore();
    }

    @Override
    public String component5() {
        return getArticle();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdateTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getOwnerId();
    }

    @Override
    public Integer value3() {
        return getAnimationId();
    }

    @Override
    public Integer value4() {
        return getScore();
    }

    @Override
    public String value5() {
        return getArticle();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdateTime();
    }

    @Override
    public CommentRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public CommentRecord value2(Integer value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public CommentRecord value3(Integer value) {
        setAnimationId(value);
        return this;
    }

    @Override
    public CommentRecord value4(Integer value) {
        setScore(value);
        return this;
    }

    @Override
    public CommentRecord value5(String value) {
        setArticle(value);
        return this;
    }

    @Override
    public CommentRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public CommentRecord value7(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public CommentRecord values(Integer value1, Integer value2, Integer value3, Integer value4, String value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached CommentRecord
     */
    public CommentRecord() {
        super(Comment.COMMENT);
    }

    /**
     * Create a detached, initialised CommentRecord
     */
    public CommentRecord(Integer id, Integer ownerId, Integer animationId, Integer score, String article, LocalDateTime createTime, LocalDateTime updateTime) {
        super(Comment.COMMENT);

        set(0, id);
        set(1, ownerId);
        set(2, animationId);
        set(3, score);
        set(4, article);
        set(5, createTime);
        set(6, updateTime);
    }
}
