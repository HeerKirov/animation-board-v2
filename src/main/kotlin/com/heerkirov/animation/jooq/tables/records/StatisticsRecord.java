/*
 * This file is generated by jOOQ.
 */
package com.heerkirov.animation.jooq.tables.records;


import com.heerkirov.animation.jooq.tables.Statistics;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record7;
import org.jooq.Row7;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StatisticsRecord extends UpdatableRecordImpl<StatisticsRecord> implements Record7<Long, Integer, String, String, JSONB, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 454579297;

    /**
     * Setter for <code>public.statistics.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.statistics.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.statistics.owner_id</code>.
     */
    public void setOwnerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.statistics.owner_id</code>.
     */
    public Integer getOwnerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.statistics.type</code>.
     */
    public void setType(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.statistics.type</code>.
     */
    public String getType() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.statistics.key</code>.
     */
    public void setKey(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.statistics.key</code>.
     */
    public String getKey() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.statistics.content</code>.
     */
    public void setContent(JSONB value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.statistics.content</code>.
     */
    public JSONB getContent() {
        return (JSONB) get(4);
    }

    /**
     * Setter for <code>public.statistics.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.statistics.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.statistics.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.statistics.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(6);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record7 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row7<Long, Integer, String, String, JSONB, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row7) super.fieldsRow();
    }

    @Override
    public Row7<Long, Integer, String, String, JSONB, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row7) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Statistics.STATISTICS.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Statistics.STATISTICS.OWNER_ID;
    }

    @Override
    public Field<String> field3() {
        return Statistics.STATISTICS.TYPE;
    }

    @Override
    public Field<String> field4() {
        return Statistics.STATISTICS.KEY;
    }

    @Override
    public Field<JSONB> field5() {
        return Statistics.STATISTICS.CONTENT;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Statistics.STATISTICS.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Statistics.STATISTICS.UPDATE_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getOwnerId();
    }

    @Override
    public String component3() {
        return getType();
    }

    @Override
    public String component4() {
        return getKey();
    }

    @Override
    public JSONB component5() {
        return getContent();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdateTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getOwnerId();
    }

    @Override
    public String value3() {
        return getType();
    }

    @Override
    public String value4() {
        return getKey();
    }

    @Override
    public JSONB value5() {
        return getContent();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdateTime();
    }

    @Override
    public StatisticsRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public StatisticsRecord value2(Integer value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public StatisticsRecord value3(String value) {
        setType(value);
        return this;
    }

    @Override
    public StatisticsRecord value4(String value) {
        setKey(value);
        return this;
    }

    @Override
    public StatisticsRecord value5(JSONB value) {
        setContent(value);
        return this;
    }

    @Override
    public StatisticsRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public StatisticsRecord value7(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public StatisticsRecord values(Long value1, Integer value2, String value3, String value4, JSONB value5, LocalDateTime value6, LocalDateTime value7) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StatisticsRecord
     */
    public StatisticsRecord() {
        super(Statistics.STATISTICS);
    }

    /**
     * Create a detached, initialised StatisticsRecord
     */
    public StatisticsRecord(Long id, Integer ownerId, String type, String key, JSONB content, LocalDateTime createTime, LocalDateTime updateTime) {
        super(Statistics.STATISTICS);

        set(0, id);
        set(1, ownerId);
        set(2, type);
        set(3, key);
        set(4, content);
        set(5, createTime);
        set(6, updateTime);
    }
}
