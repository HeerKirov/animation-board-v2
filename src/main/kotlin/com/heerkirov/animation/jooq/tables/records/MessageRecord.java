/*
 * This file is generated by jOOQ.
 */
package com.heerkirov.animation.jooq.tables.records;


import com.heerkirov.animation.jooq.tables.Message;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class MessageRecord extends UpdatableRecordImpl<MessageRecord> implements Record6<Long, Integer, Short, JSONB, Boolean, LocalDateTime> {

    private static final long serialVersionUID = -1259940252;

    /**
     * Setter for <code>public.message.id</code>.
     */
    public void setId(Long value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.message.id</code>.
     */
    public Long getId() {
        return (Long) get(0);
    }

    /**
     * Setter for <code>public.message.owner_id</code>.
     */
    public void setOwnerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.message.owner_id</code>.
     */
    public Integer getOwnerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.message.type</code>.
     */
    public void setType(Short value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.message.type</code>.
     */
    public Short getType() {
        return (Short) get(2);
    }

    /**
     * Setter for <code>public.message.content</code>.
     */
    public void setContent(JSONB value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.message.content</code>.
     */
    public JSONB getContent() {
        return (JSONB) get(3);
    }

    /**
     * Setter for <code>public.message.read</code>.
     */
    public void setRead(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.message.read</code>.
     */
    public Boolean getRead() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.message.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.message.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Long> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Long, Integer, Short, JSONB, Boolean, LocalDateTime> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Long, Integer, Short, JSONB, Boolean, LocalDateTime> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Long> field1() {
        return Message.MESSAGE.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Message.MESSAGE.OWNER_ID;
    }

    @Override
    public Field<Short> field3() {
        return Message.MESSAGE.TYPE;
    }

    @Override
    public Field<JSONB> field4() {
        return Message.MESSAGE.CONTENT;
    }

    @Override
    public Field<Boolean> field5() {
        return Message.MESSAGE.READ;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Message.MESSAGE.CREATE_TIME;
    }

    @Override
    public Long component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getOwnerId();
    }

    @Override
    public Short component3() {
        return getType();
    }

    @Override
    public JSONB component4() {
        return getContent();
    }

    @Override
    public Boolean component5() {
        return getRead();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public Long value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getOwnerId();
    }

    @Override
    public Short value3() {
        return getType();
    }

    @Override
    public JSONB value4() {
        return getContent();
    }

    @Override
    public Boolean value5() {
        return getRead();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public MessageRecord value1(Long value) {
        setId(value);
        return this;
    }

    @Override
    public MessageRecord value2(Integer value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public MessageRecord value3(Short value) {
        setType(value);
        return this;
    }

    @Override
    public MessageRecord value4(JSONB value) {
        setContent(value);
        return this;
    }

    @Override
    public MessageRecord value5(Boolean value) {
        setRead(value);
        return this;
    }

    @Override
    public MessageRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public MessageRecord values(Long value1, Integer value2, Short value3, JSONB value4, Boolean value5, LocalDateTime value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached MessageRecord
     */
    public MessageRecord() {
        super(Message.MESSAGE);
    }

    /**
     * Create a detached, initialised MessageRecord
     */
    public MessageRecord(Long id, Integer ownerId, Short type, JSONB content, Boolean read, LocalDateTime createTime) {
        super(Message.MESSAGE);

        set(0, id);
        set(1, ownerId);
        set(2, type);
        set(3, content);
        set(4, read);
        set(5, createTime);
    }
}
