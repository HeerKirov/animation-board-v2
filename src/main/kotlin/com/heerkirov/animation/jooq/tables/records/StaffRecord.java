/*
 * This file is generated by jOOQ.
 */
package com.heerkirov.animation.jooq.tables.records;


import com.heerkirov.animation.jooq.tables.Staff;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record9;
import org.jooq.Row9;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class StaffRecord extends UpdatableRecordImpl<StaffRecord> implements Record9<Integer, String, String, String, Boolean, LocalDateTime, LocalDateTime, Integer, Integer> {

    private static final long serialVersionUID = 550793662;

    /**
     * Setter for <code>public.staff.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.staff.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.staff.name</code>.
     */
    public void setName(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.staff.name</code>.
     */
    public String getName() {
        return (String) get(1);
    }

    /**
     * Setter for <code>public.staff.origin_name</code>.
     */
    public void setOriginName(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.staff.origin_name</code>.
     */
    public String getOriginName() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.staff.remark</code>.
     */
    public void setRemark(String value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.staff.remark</code>.
     */
    public String getRemark() {
        return (String) get(3);
    }

    /**
     * Setter for <code>public.staff.is_organization</code>.
     */
    public void setIsOrganization(Boolean value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.staff.is_organization</code>.
     */
    public Boolean getIsOrganization() {
        return (Boolean) get(4);
    }

    /**
     * Setter for <code>public.staff.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.staff.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(5);
    }

    /**
     * Setter for <code>public.staff.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.staff.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(6);
    }

    /**
     * Setter for <code>public.staff.creator</code>.
     */
    public void setCreator(Integer value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.staff.creator</code>.
     */
    public Integer getCreator() {
        return (Integer) get(7);
    }

    /**
     * Setter for <code>public.staff.updater</code>.
     */
    public void setUpdater(Integer value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.staff.updater</code>.
     */
    public Integer getUpdater() {
        return (Integer) get(8);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record9 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row9<Integer, String, String, String, Boolean, LocalDateTime, LocalDateTime, Integer, Integer> fieldsRow() {
        return (Row9) super.fieldsRow();
    }

    @Override
    public Row9<Integer, String, String, String, Boolean, LocalDateTime, LocalDateTime, Integer, Integer> valuesRow() {
        return (Row9) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Staff.STAFF.ID;
    }

    @Override
    public Field<String> field2() {
        return Staff.STAFF.NAME;
    }

    @Override
    public Field<String> field3() {
        return Staff.STAFF.ORIGIN_NAME;
    }

    @Override
    public Field<String> field4() {
        return Staff.STAFF.REMARK;
    }

    @Override
    public Field<Boolean> field5() {
        return Staff.STAFF.IS_ORGANIZATION;
    }

    @Override
    public Field<LocalDateTime> field6() {
        return Staff.STAFF.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field7() {
        return Staff.STAFF.UPDATE_TIME;
    }

    @Override
    public Field<Integer> field8() {
        return Staff.STAFF.CREATOR;
    }

    @Override
    public Field<Integer> field9() {
        return Staff.STAFF.UPDATER;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public String component2() {
        return getName();
    }

    @Override
    public String component3() {
        return getOriginName();
    }

    @Override
    public String component4() {
        return getRemark();
    }

    @Override
    public Boolean component5() {
        return getIsOrganization();
    }

    @Override
    public LocalDateTime component6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component7() {
        return getUpdateTime();
    }

    @Override
    public Integer component8() {
        return getCreator();
    }

    @Override
    public Integer component9() {
        return getUpdater();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public String value2() {
        return getName();
    }

    @Override
    public String value3() {
        return getOriginName();
    }

    @Override
    public String value4() {
        return getRemark();
    }

    @Override
    public Boolean value5() {
        return getIsOrganization();
    }

    @Override
    public LocalDateTime value6() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value7() {
        return getUpdateTime();
    }

    @Override
    public Integer value8() {
        return getCreator();
    }

    @Override
    public Integer value9() {
        return getUpdater();
    }

    @Override
    public StaffRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public StaffRecord value2(String value) {
        setName(value);
        return this;
    }

    @Override
    public StaffRecord value3(String value) {
        setOriginName(value);
        return this;
    }

    @Override
    public StaffRecord value4(String value) {
        setRemark(value);
        return this;
    }

    @Override
    public StaffRecord value5(Boolean value) {
        setIsOrganization(value);
        return this;
    }

    @Override
    public StaffRecord value6(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public StaffRecord value7(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public StaffRecord value8(Integer value) {
        setCreator(value);
        return this;
    }

    @Override
    public StaffRecord value9(Integer value) {
        setUpdater(value);
        return this;
    }

    @Override
    public StaffRecord values(Integer value1, String value2, String value3, String value4, Boolean value5, LocalDateTime value6, LocalDateTime value7, Integer value8, Integer value9) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached StaffRecord
     */
    public StaffRecord() {
        super(Staff.STAFF);
    }

    /**
     * Create a detached, initialised StaffRecord
     */
    public StaffRecord(Integer id, String name, String originName, String remark, Boolean isOrganization, LocalDateTime createTime, LocalDateTime updateTime, Integer creator, Integer updater) {
        super(Staff.STAFF);

        set(0, id);
        set(1, name);
        set(2, originName);
        set(3, remark);
        set(4, isOrganization);
        set(5, createTime);
        set(6, updateTime);
        set(7, creator);
        set(8, updater);
    }
}
