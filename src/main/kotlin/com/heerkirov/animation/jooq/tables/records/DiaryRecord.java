/*
 * This file is generated by jOOQ.
 */
package com.heerkirov.animation.jooq.tables.records;


import com.heerkirov.animation.jooq.tables.Diary;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.JSONB;
import org.jooq.Record1;
import org.jooq.Record13;
import org.jooq.Row13;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class DiaryRecord extends UpdatableRecordImpl<DiaryRecord> implements Record13<Integer, Integer, Integer, Short, Integer, JSONB, Double, Boolean, Boolean, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> {

    private static final long serialVersionUID = 1490264883;

    /**
     * Setter for <code>public.diary.id</code>.
     */
    public void setId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.diary.id</code>.
     */
    public Integer getId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.diary.owner_id</code>.
     */
    public void setOwnerId(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.diary.owner_id</code>.
     */
    public Integer getOwnerId() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.diary.animation_id</code>.
     */
    public void setAnimationId(Integer value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.diary.animation_id</code>.
     */
    public Integer getAnimationId() {
        return (Integer) get(2);
    }

    /**
     * Setter for <code>public.diary.status</code>.
     */
    public void setStatus(Short value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.diary.status</code>.
     */
    public Short getStatus() {
        return (Short) get(3);
    }

    /**
     * Setter for <code>public.diary.watched_quantity</code>.
     */
    public void setWatchedQuantity(Integer value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.diary.watched_quantity</code>.
     */
    public Integer getWatchedQuantity() {
        return (Integer) get(4);
    }

    /**
     * Setter for <code>public.diary.watched_record</code>.
     */
    public void setWatchedRecord(JSONB value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.diary.watched_record</code>.
     */
    public JSONB getWatchedRecord() {
        return (JSONB) get(5);
    }

    /**
     * Setter for <code>public.diary.watch_progress</code>.
     */
    public void setWatchProgress(Double value) {
        set(6, value);
    }

    /**
     * Getter for <code>public.diary.watch_progress</code>.
     */
    public Double getWatchProgress() {
        return (Double) get(6);
    }

    /**
     * Setter for <code>public.diary.watch_original</code>.
     */
    public void setWatchOriginal(Boolean value) {
        set(7, value);
    }

    /**
     * Getter for <code>public.diary.watch_original</code>.
     */
    public Boolean getWatchOriginal() {
        return (Boolean) get(7);
    }

    /**
     * Setter for <code>public.diary.watch_many_times</code>.
     */
    public void setWatchManyTimes(Boolean value) {
        set(8, value);
    }

    /**
     * Getter for <code>public.diary.watch_many_times</code>.
     */
    public Boolean getWatchManyTimes() {
        return (Boolean) get(8);
    }

    /**
     * Setter for <code>public.diary.subscription_time</code>.
     */
    public void setSubscriptionTime(LocalDateTime value) {
        set(9, value);
    }

    /**
     * Getter for <code>public.diary.subscription_time</code>.
     */
    public LocalDateTime getSubscriptionTime() {
        return (LocalDateTime) get(9);
    }

    /**
     * Setter for <code>public.diary.finish_time</code>.
     */
    public void setFinishTime(LocalDateTime value) {
        set(10, value);
    }

    /**
     * Getter for <code>public.diary.finish_time</code>.
     */
    public LocalDateTime getFinishTime() {
        return (LocalDateTime) get(10);
    }

    /**
     * Setter for <code>public.diary.create_time</code>.
     */
    public void setCreateTime(LocalDateTime value) {
        set(11, value);
    }

    /**
     * Getter for <code>public.diary.create_time</code>.
     */
    public LocalDateTime getCreateTime() {
        return (LocalDateTime) get(11);
    }

    /**
     * Setter for <code>public.diary.update_time</code>.
     */
    public void setUpdateTime(LocalDateTime value) {
        set(12, value);
    }

    /**
     * Getter for <code>public.diary.update_time</code>.
     */
    public LocalDateTime getUpdateTime() {
        return (LocalDateTime) get(12);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record13 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row13<Integer, Integer, Integer, Short, Integer, JSONB, Double, Boolean, Boolean, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> fieldsRow() {
        return (Row13) super.fieldsRow();
    }

    @Override
    public Row13<Integer, Integer, Integer, Short, Integer, JSONB, Double, Boolean, Boolean, LocalDateTime, LocalDateTime, LocalDateTime, LocalDateTime> valuesRow() {
        return (Row13) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Diary.DIARY.ID;
    }

    @Override
    public Field<Integer> field2() {
        return Diary.DIARY.OWNER_ID;
    }

    @Override
    public Field<Integer> field3() {
        return Diary.DIARY.ANIMATION_ID;
    }

    @Override
    public Field<Short> field4() {
        return Diary.DIARY.STATUS;
    }

    @Override
    public Field<Integer> field5() {
        return Diary.DIARY.WATCHED_QUANTITY;
    }

    @Override
    public Field<JSONB> field6() {
        return Diary.DIARY.WATCHED_RECORD;
    }

    @Override
    public Field<Double> field7() {
        return Diary.DIARY.WATCH_PROGRESS;
    }

    @Override
    public Field<Boolean> field8() {
        return Diary.DIARY.WATCH_ORIGINAL;
    }

    @Override
    public Field<Boolean> field9() {
        return Diary.DIARY.WATCH_MANY_TIMES;
    }

    @Override
    public Field<LocalDateTime> field10() {
        return Diary.DIARY.SUBSCRIPTION_TIME;
    }

    @Override
    public Field<LocalDateTime> field11() {
        return Diary.DIARY.FINISH_TIME;
    }

    @Override
    public Field<LocalDateTime> field12() {
        return Diary.DIARY.CREATE_TIME;
    }

    @Override
    public Field<LocalDateTime> field13() {
        return Diary.DIARY.UPDATE_TIME;
    }

    @Override
    public Integer component1() {
        return getId();
    }

    @Override
    public Integer component2() {
        return getOwnerId();
    }

    @Override
    public Integer component3() {
        return getAnimationId();
    }

    @Override
    public Short component4() {
        return getStatus();
    }

    @Override
    public Integer component5() {
        return getWatchedQuantity();
    }

    @Override
    public JSONB component6() {
        return getWatchedRecord();
    }

    @Override
    public Double component7() {
        return getWatchProgress();
    }

    @Override
    public Boolean component8() {
        return getWatchOriginal();
    }

    @Override
    public Boolean component9() {
        return getWatchManyTimes();
    }

    @Override
    public LocalDateTime component10() {
        return getSubscriptionTime();
    }

    @Override
    public LocalDateTime component11() {
        return getFinishTime();
    }

    @Override
    public LocalDateTime component12() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime component13() {
        return getUpdateTime();
    }

    @Override
    public Integer value1() {
        return getId();
    }

    @Override
    public Integer value2() {
        return getOwnerId();
    }

    @Override
    public Integer value3() {
        return getAnimationId();
    }

    @Override
    public Short value4() {
        return getStatus();
    }

    @Override
    public Integer value5() {
        return getWatchedQuantity();
    }

    @Override
    public JSONB value6() {
        return getWatchedRecord();
    }

    @Override
    public Double value7() {
        return getWatchProgress();
    }

    @Override
    public Boolean value8() {
        return getWatchOriginal();
    }

    @Override
    public Boolean value9() {
        return getWatchManyTimes();
    }

    @Override
    public LocalDateTime value10() {
        return getSubscriptionTime();
    }

    @Override
    public LocalDateTime value11() {
        return getFinishTime();
    }

    @Override
    public LocalDateTime value12() {
        return getCreateTime();
    }

    @Override
    public LocalDateTime value13() {
        return getUpdateTime();
    }

    @Override
    public DiaryRecord value1(Integer value) {
        setId(value);
        return this;
    }

    @Override
    public DiaryRecord value2(Integer value) {
        setOwnerId(value);
        return this;
    }

    @Override
    public DiaryRecord value3(Integer value) {
        setAnimationId(value);
        return this;
    }

    @Override
    public DiaryRecord value4(Short value) {
        setStatus(value);
        return this;
    }

    @Override
    public DiaryRecord value5(Integer value) {
        setWatchedQuantity(value);
        return this;
    }

    @Override
    public DiaryRecord value6(JSONB value) {
        setWatchedRecord(value);
        return this;
    }

    @Override
    public DiaryRecord value7(Double value) {
        setWatchProgress(value);
        return this;
    }

    @Override
    public DiaryRecord value8(Boolean value) {
        setWatchOriginal(value);
        return this;
    }

    @Override
    public DiaryRecord value9(Boolean value) {
        setWatchManyTimes(value);
        return this;
    }

    @Override
    public DiaryRecord value10(LocalDateTime value) {
        setSubscriptionTime(value);
        return this;
    }

    @Override
    public DiaryRecord value11(LocalDateTime value) {
        setFinishTime(value);
        return this;
    }

    @Override
    public DiaryRecord value12(LocalDateTime value) {
        setCreateTime(value);
        return this;
    }

    @Override
    public DiaryRecord value13(LocalDateTime value) {
        setUpdateTime(value);
        return this;
    }

    @Override
    public DiaryRecord values(Integer value1, Integer value2, Integer value3, Short value4, Integer value5, JSONB value6, Double value7, Boolean value8, Boolean value9, LocalDateTime value10, LocalDateTime value11, LocalDateTime value12, LocalDateTime value13) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        value7(value7);
        value8(value8);
        value9(value9);
        value10(value10);
        value11(value11);
        value12(value12);
        value13(value13);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached DiaryRecord
     */
    public DiaryRecord() {
        super(Diary.DIARY);
    }

    /**
     * Create a detached, initialised DiaryRecord
     */
    public DiaryRecord(Integer id, Integer ownerId, Integer animationId, Short status, Integer watchedQuantity, JSONB watchedRecord, Double watchProgress, Boolean watchOriginal, Boolean watchManyTimes, LocalDateTime subscriptionTime, LocalDateTime finishTime, LocalDateTime createTime, LocalDateTime updateTime) {
        super(Diary.DIARY);

        set(0, id);
        set(1, ownerId);
        set(2, animationId);
        set(3, status);
        set(4, watchedQuantity);
        set(5, watchedRecord);
        set(6, watchProgress);
        set(7, watchOriginal);
        set(8, watchManyTimes);
        set(9, subscriptionTime);
        set(10, finishTime);
        set(11, createTime);
        set(12, updateTime);
    }
}
