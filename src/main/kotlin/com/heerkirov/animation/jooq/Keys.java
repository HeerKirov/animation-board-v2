/*
 * This file is generated by jOOQ.
 */
package com.heerkirov.animation.jooq;


import com.heerkirov.animation.jooq.tables.Animation;
import com.heerkirov.animation.jooq.tables.AnimationStaffRelation;
import com.heerkirov.animation.jooq.tables.AnimationTagRelation;
import com.heerkirov.animation.jooq.tables.Comment;
import com.heerkirov.animation.jooq.tables.Diary;
import com.heerkirov.animation.jooq.tables.Message;
import com.heerkirov.animation.jooq.tables.Staff;
import com.heerkirov.animation.jooq.tables.Statistics;
import com.heerkirov.animation.jooq.tables.Tag;
import com.heerkirov.animation.jooq.tables.User;
import com.heerkirov.animation.jooq.tables.records.AnimationRecord;
import com.heerkirov.animation.jooq.tables.records.AnimationStaffRelationRecord;
import com.heerkirov.animation.jooq.tables.records.AnimationTagRelationRecord;
import com.heerkirov.animation.jooq.tables.records.CommentRecord;
import com.heerkirov.animation.jooq.tables.records.DiaryRecord;
import com.heerkirov.animation.jooq.tables.records.MessageRecord;
import com.heerkirov.animation.jooq.tables.records.StaffRecord;
import com.heerkirov.animation.jooq.tables.records.StatisticsRecord;
import com.heerkirov.animation.jooq.tables.records.TagRecord;
import com.heerkirov.animation.jooq.tables.records.UserRecord;

import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AnimationRecord, Integer> IDENTITY_ANIMATION = Identities0.IDENTITY_ANIMATION;
    public static final Identity<AnimationStaffRelationRecord, Long> IDENTITY_ANIMATION_STAFF_RELATION = Identities0.IDENTITY_ANIMATION_STAFF_RELATION;
    public static final Identity<AnimationTagRelationRecord, Long> IDENTITY_ANIMATION_TAG_RELATION = Identities0.IDENTITY_ANIMATION_TAG_RELATION;
    public static final Identity<CommentRecord, Integer> IDENTITY_COMMENT = Identities0.IDENTITY_COMMENT;
    public static final Identity<DiaryRecord, Integer> IDENTITY_DIARY = Identities0.IDENTITY_DIARY;
    public static final Identity<MessageRecord, Long> IDENTITY_MESSAGE = Identities0.IDENTITY_MESSAGE;
    public static final Identity<StaffRecord, Integer> IDENTITY_STAFF = Identities0.IDENTITY_STAFF;
    public static final Identity<StatisticsRecord, Long> IDENTITY_STATISTICS = Identities0.IDENTITY_STATISTICS;
    public static final Identity<TagRecord, Integer> IDENTITY_TAG = Identities0.IDENTITY_TAG;
    public static final Identity<UserRecord, Integer> IDENTITY_USER = Identities0.IDENTITY_USER;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AnimationRecord> ANIMATION_PKEY = UniqueKeys0.ANIMATION_PKEY;
    public static final UniqueKey<AnimationStaffRelationRecord> ANIMATION_STAFF_RELATION_PKEY = UniqueKeys0.ANIMATION_STAFF_RELATION_PKEY;
    public static final UniqueKey<AnimationTagRelationRecord> ANIMATION_TAG_RELATION_PKEY = UniqueKeys0.ANIMATION_TAG_RELATION_PKEY;
    public static final UniqueKey<CommentRecord> COMMENT_PKEY = UniqueKeys0.COMMENT_PKEY;
    public static final UniqueKey<DiaryRecord> DIARY_PKEY = UniqueKeys0.DIARY_PKEY;
    public static final UniqueKey<MessageRecord> MESSAGE_PKEY = UniqueKeys0.MESSAGE_PKEY;
    public static final UniqueKey<StaffRecord> STAFF_PKEY = UniqueKeys0.STAFF_PKEY;
    public static final UniqueKey<StatisticsRecord> STATISTICS_PKEY = UniqueKeys0.STATISTICS_PKEY;
    public static final UniqueKey<TagRecord> TAG_PKEY = UniqueKeys0.TAG_PKEY;
    public static final UniqueKey<UserRecord> USER_PKEY = UniqueKeys0.USER_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------


    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<AnimationRecord, Integer> IDENTITY_ANIMATION = Internal.createIdentity(Animation.ANIMATION, Animation.ANIMATION.ID);
        public static Identity<AnimationStaffRelationRecord, Long> IDENTITY_ANIMATION_STAFF_RELATION = Internal.createIdentity(AnimationStaffRelation.ANIMATION_STAFF_RELATION, AnimationStaffRelation.ANIMATION_STAFF_RELATION.ID);
        public static Identity<AnimationTagRelationRecord, Long> IDENTITY_ANIMATION_TAG_RELATION = Internal.createIdentity(AnimationTagRelation.ANIMATION_TAG_RELATION, AnimationTagRelation.ANIMATION_TAG_RELATION.ID);
        public static Identity<CommentRecord, Integer> IDENTITY_COMMENT = Internal.createIdentity(Comment.COMMENT, Comment.COMMENT.ID);
        public static Identity<DiaryRecord, Integer> IDENTITY_DIARY = Internal.createIdentity(Diary.DIARY, Diary.DIARY.ID);
        public static Identity<MessageRecord, Long> IDENTITY_MESSAGE = Internal.createIdentity(Message.MESSAGE, Message.MESSAGE.ID);
        public static Identity<StaffRecord, Integer> IDENTITY_STAFF = Internal.createIdentity(Staff.STAFF, Staff.STAFF.ID);
        public static Identity<StatisticsRecord, Long> IDENTITY_STATISTICS = Internal.createIdentity(Statistics.STATISTICS, Statistics.STATISTICS.ID);
        public static Identity<TagRecord, Integer> IDENTITY_TAG = Internal.createIdentity(Tag.TAG, Tag.TAG.ID);
        public static Identity<UserRecord, Integer> IDENTITY_USER = Internal.createIdentity(User.USER, User.USER.ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AnimationRecord> ANIMATION_PKEY = Internal.createUniqueKey(Animation.ANIMATION, "animation_pkey", new TableField[] { Animation.ANIMATION.ID }, true);
        public static final UniqueKey<AnimationStaffRelationRecord> ANIMATION_STAFF_RELATION_PKEY = Internal.createUniqueKey(AnimationStaffRelation.ANIMATION_STAFF_RELATION, "animation_staff_relation_pkey", new TableField[] { AnimationStaffRelation.ANIMATION_STAFF_RELATION.ID }, true);
        public static final UniqueKey<AnimationTagRelationRecord> ANIMATION_TAG_RELATION_PKEY = Internal.createUniqueKey(AnimationTagRelation.ANIMATION_TAG_RELATION, "animation_tag_relation_pkey", new TableField[] { AnimationTagRelation.ANIMATION_TAG_RELATION.ID }, true);
        public static final UniqueKey<CommentRecord> COMMENT_PKEY = Internal.createUniqueKey(Comment.COMMENT, "comment_pkey", new TableField[] { Comment.COMMENT.ID }, true);
        public static final UniqueKey<DiaryRecord> DIARY_PKEY = Internal.createUniqueKey(Diary.DIARY, "diary_pkey", new TableField[] { Diary.DIARY.ID }, true);
        public static final UniqueKey<MessageRecord> MESSAGE_PKEY = Internal.createUniqueKey(Message.MESSAGE, "message_pkey", new TableField[] { Message.MESSAGE.ID }, true);
        public static final UniqueKey<StaffRecord> STAFF_PKEY = Internal.createUniqueKey(Staff.STAFF, "staff_pkey", new TableField[] { Staff.STAFF.ID }, true);
        public static final UniqueKey<StatisticsRecord> STATISTICS_PKEY = Internal.createUniqueKey(Statistics.STATISTICS, "statistics_pkey", new TableField[] { Statistics.STATISTICS.ID }, true);
        public static final UniqueKey<TagRecord> TAG_PKEY = Internal.createUniqueKey(Tag.TAG, "tag_pkey", new TableField[] { Tag.TAG.ID }, true);
        public static final UniqueKey<UserRecord> USER_PKEY = Internal.createUniqueKey(User.USER, "user_pkey", new TableField[] { User.USER.ID }, true);
    }
}
